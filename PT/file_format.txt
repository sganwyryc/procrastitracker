The information below should be sufficient for a programmer to read the database files, if required.
See also nodedb.h load() and save() functions as an example.

The whole file is written thru zlib, so can be read with that, or first unpacked with gzip

struct DATABASE {
	int version (== 13, as of June 9 2019, format may be different if other version)
	int magic (== 'PTFF' on x86)
	int numtags
	struct { char name[32]; int color; } tags[numtags]
	int minfilter
	int foldlevel
	int prefs[10] (see advanced prefs window, also see "prefs" in procrastitracker.cpp)
	NODE root
}

struct NODE {
	char *name (null terminated bytes)
	int tagindex
	char ishidden
	int numberofdays
	DAY days[numberofdays]
	int numchildren
	NODE children[numchildren]
}

struct DAY {
	unsigned short day (lower 5 bits = day, next 4 bits = month, rest = year counted from 2000)
	unsigned short firstminuteused (counted from midnight)
	int activeseconds, semiidleseconds, key, lmb, rmb, scrollwheel
}
